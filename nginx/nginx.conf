events {
    worker_connections 512;
}

http {
    upstream websocket {
        server localhost:8528;
    }

    access_log /home/ubuntu/nginx/access.log;
    error_log /home/ubuntu/nginx/error.log;

    server {
        listen [::]:8000 ssl;
        listen 8000 ssl;
        server_name disconnected;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass http://websocket;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # listen [::]:443 ssl ipv6only=on; # managed by Certbot
        # listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/reconnection.jp/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/reconnection.jp/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    # Reconnection for Web (After build react-app)
    server {
        # listen [::]:80 ssl;
        # listen 80;
        server_name reconnection_website;

        location / {
            root /home/ubuntu/website;
            index index.html;
        }

        listen [::]:443 ssl; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/reconnection.jp/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/reconnection.jp/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    server {
        if ($host = reconnection.jp) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80 ;
        listen [::]:80 ;
        server_name reconnection.jp;
        return 404; # managed by Certbot


    }
}

# sudo nginx -c /home/ec2-user/nginx/nginx.conf
# sudo nginx -s stop